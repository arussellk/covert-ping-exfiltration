-------------------------------------------------
Covert Data Exfiltration Using ICMP Ping Messages
-------------------------------------------------

      CS6490 Network Security course project
                   Spring 2020

                 Jonathon Brugman
                Russell Kennington
                  Daniel Merrell

-------------------------------------------------

Overview:
-------------------------------------------------
The code is organized into the following 2 components:


Telnet pinger:
-------------------------------------------------

The telnet pinger is run on a compromised device to run commands on the PLC.
The script retrieves and parses relevant setting information into nibs and then runs ping commands to transmit that data to the sniffer.

Located in ./telnet-pinger/

It includes two files ping_access.py and extra_funcs.py

$python(3) ping_access.py

It makes use of several extra methods and dictionaries stored in extra_funcs.py

Sniffer:
-------------------------------------------------
The sniffer tool takes a network traffic capture file (located in `./pcap_samples/`) and extracts (address,interval) tuples for each time interval (set at 1 minute).

Tuples are used as an index into a lookup table to extract a bit sequence.

Located in `./sniffer/`

```
$ cd ./sniffer/
$ make test
$ make run
```

Files: 
  extractor.py
    Module containing helper functions for extracting (address,interval) tuples from a stream of packets
    
  loader.py
    Loads a .pcat file into an array of packets
    
  lookup.py
    Contains the lookup table for (address,interval) tuples
    
  packet.py
    Defines the format of a packet
    
  test_extractor.py
    Unit tests for the extractor
    
  
sniffer is using Python 3.7.5
